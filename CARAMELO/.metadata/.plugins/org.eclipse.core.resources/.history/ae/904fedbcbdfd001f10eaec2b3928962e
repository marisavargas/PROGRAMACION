package ExamenBHugoDominguez;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class Plantacion {
	private String cif;
	private List<Arbol> arboles;

	public Plantacion(String cif) {
		this.cif = cif;
		this.arboles = new ArrayList<Arbol>();
	}

	public String getCif() {
		return cif;
	}

	public void setCif(String cif) {
		this.cif = cif;
	}

	public void addArbol(Arbol arbol) {
		arboles.add(arbol);
	}

	public List<Arbol> getArbolesAnualidad(Integer anyo) {
		List<Arbol> arbolesAnual = new ArrayList<Arbol>();
		for (Arbol arbol : arboles) {
			if (arbol.getFechaPlant().getYear() == anyo) {
				arboles.add(arbol);
			}
		}
		return arbolesAnual;
	}

	public BigDecimal getAlturaTotal() {
		BigDecimal alturaTotal = new BigDecimal(0);
		for (Arbol arbol : arboles) {
			alturaTotal.add(arbol.getAltura());
		}
		return alturaTotal.setScale(2, RoundingMode.HALF_UP);
	}

	public BigDecimal calcularGananciaExportacion() {
		BigDecimal ganancias = new BigDecimal(0);
		for (Arbol arbol : arboles) {
			if (arbol.sePuedeExportar() == true) {
				ganancias.add(arbol.getPrecioExport());
			}
		}
		return ganancias;
	}

	/*
	 * public void exportarArboles() { Iterator<Arbol> iterador =
	 * arboles.iterator(); while(iterador.hasNext()) { for (Arbol arbol : arboles) {
	 * 
	 * } } }
	 */

	@Override
	public String toString() {
		return "PLANTACIÓN " + cif + " - " + arboles.size() + " árboles con " + getAlturaTotal() + " cm totales";
	}

}
